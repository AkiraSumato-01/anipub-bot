# python3.6
# -*- coding: utf-8 -*-

import asyncio
import io
import os
import platform
import sys
import textwrap
import traceback
from contextlib import redirect_stdout
from random import randint

import discord
import psutil
from discord.ext import commands

import humanize


class Owner(object):
    """–ù–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""

    def __init__(self, bot):
        self.bot = bot
    
    @commands.command(name='logout', hidden=True)
    @commands.is_owner()
    async def logout(self, ctx):
        """–î–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –æ—Ç Discord.
        """

        def message_check(m):
            return m.author.id == ctx.author.id

        await ctx.send(':hammer_pick: –•–æ—Ä–æ—à–æ-—Ö–æ—Ä–æ—à–æ! –ù–æ... –ú–Ω–µ –ø—Ä–∞–≤–¥–∞ –Ω–∞–¥–æ –¥–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è?...')
        msg = await self.bot.wait_for('message', check=message_check, timeout=120.0)

        if msg.content.lower() in ['–¥–∞', '–∞–≥–∞', '—É–≥—É', '–¥–∞–≤–∞–π —É–∂–µ']:
            await ctx.send('<:offline:455810041015173121> –•–æ—Ä–æ—à–æ, —è –¥–µ–∞–≤—Ç–∏—Ä–∏–∑—É—é—Å—å...')
        else:
            return await ctx.send('<:online:455810041002459156> –û—Å—Ç–∞—é—Å—å –≤ —Å–µ—Ç–∏...')

        await asyncio.sleep(1.2)
        await self.bot.logout()

    @commands.command(name='checkvoice', aliases=['cv'], hidden=True)
    @commands.is_owner()
    async def check_voice_clients(self, ctx, show: bool = False):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ –≥–¥–µ-—Ç–æ –º—É–∑—ã–∫–∞ –≤ –º–æ–µ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏.
        """
        active_voice_clients = [x.name for x in self.bot.guilds if x.voice_client]
        if show:
            await ctx.send(f'–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é –º—É–∑—ã–∫—É –Ω–∞ {len(active_voice_clients)} —Å–µ—Ä–≤–µ—Ä–∞—Ö:\n{", ".join(active_voice_clients)}')
        else:
            await ctx.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é –º—É–∑—ã–∫—É –Ω–∞ %s —Å–µ—Ä–≤–µ—Ä–∞—Ö.' % len(active_voice_clients))

    @commands.command(name='sysinfo', hidden=True)
    @commands.is_owner()
    async def sysinfo(self, ctx):
        """–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
        """
        pid = os.getpid()
        py = psutil.Process(pid)

        embed = discord.Embed(timestamp=ctx.message.created_at,
                              color=randint(0x000000, 0xFFFFFF),
                              title='<:naomicmds:491314340029530132> –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')

        embed.add_field(name='<:naomicpu:493341839953494031> –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:',
                        value=f'‚ñ´ –ö–æ–ª-–≤–æ —è–¥–µ—Ä: {psutil.cpu_count()}\n'
                              f'‚ñ´ –ó–∞–≥—Ä—É–∑–∫–∞: {round(psutil.cpu_percent())}%\n'
                              f'‚ñ´ –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–æ–º: {round(py.cpu_percent())}%')
        embed.add_field(name='<:naomiram:493341277966958602> –û–ø–µ—Ä–∞—Ç–∏–≤–∞:',
                        value=f'‚ñ´ –û–±—ä–µ–º: {humanize.naturalsize(psutil.virtual_memory().total)}\n'
                              f'‚ñ´ –ó–∞–≥—Ä—É–∑–∫–∞: {round(psutil.virtual_memory().percent)}%\n'
                              f'‚ñ´ –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–æ–º: {round(py.memory_percent())}%')
        embed.add_field(name='<:naomi_python_logo:516539675628797962> –¢–µ–∫—É—â–∏–π –º–æ–¥—É–ª—å:',
                        value='‚ñ´ ' + os.path.basename(__file__))
        embed.add_field(name='<:naomicmds:491314340029530132> –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞:',
                        value='‚ñ´ ' + py.name())
        embed.add_field(name='üñ• –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:',
                        value='‚ñ´ ' + platform.platform())
        embed.add_field(name='<:naomiusers:491313467962294296> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:',
                        value='‚ñ´ ' + py.username())
        embed.add_field(name='<:naomi_dir:516541796646387712> –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä —Ç—É—Ç:',
                        value='‚ñ´ ' + sys.executable)
        embed.add_field(name=f'<:naomi_discord_logo:516264528745332736> Discord.py {discord.__version__}',
                        value=chr(173))
        embed.add_field(name=f'<:naomi_python_logo:516539675628797962> Python {platform.python_version()}',
                        value=chr(173))
        
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{os.environ["PREFIX"]}{ctx.command}')

        await ctx.send(embed=embed)

    @commands.command(name='quit', aliases=['quitserver'], hidden=True)
    @commands.is_owner()
    async def quit_guild(self, ctx, guild: discord.Guild):
        """–û—Ç–∫–ª—é—á–∏—Ç—å –º–µ–Ω—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:guild` - –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!quit MyLittleGroup
        ```
        """
        try:
            await guild.leave()

        except:
            ctx.send(f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞:\n{traceback.format_exc()}')

    @commands.command(name='ping', hidden=True)
    @commands.is_owner()
    async def ping(self, ctx):
        """–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ API, –∫–ª–∏–µ–Ω—Ç–∞.
        """

        resp = await ctx.send('–¢–µ—Å—Ç–∏—Ä—É–µ–º...')
        diff = resp.created_at - ctx.message.created_at
        await resp.edit(content=f':ping_pong: Pong!\n–ó–∞–¥–µ—Ä–∂–∫–∞ API: {1000 * diff.total_seconds():.1f}–º—Å.\n–ó–∞–¥–µ—Ä–∂–∫–∞ {self.bot.user.name}: {round(self.bot.latency * 1000)}–º—Å')

    @commands.command(hidden=True, aliases=['r'])
    @commands.is_owner()
    async def restart(self, ctx):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞.
        """
        active_voice_clients = [x.name for x in self.bot.guilds if x.voice_client]
        
        # –ß—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏.
        # –í –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, –±–æ—Ç –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –µ–µ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ.
        if len(active_voice_clients) >= 1:
            alert = await ctx.send('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é –º—É–∑—ã–∫—É –Ω–∞ %s —Å–µ—Ä–≤–µ—Ä–∞—Ö.\n"‚ùå" –¥–ª—è –æ—Ç–º–µ–Ω–∞.' % len(active_voice_clients))
            for x in ['‚úÖ', '‚ùå']:
                await alert.add_reaction(x)
            try:
                def check(r, u):
                    if not alert \
                        or r.message.id != alert.id \
                        or u.bot:
                        return False
                    return True

                r, u = await self.bot.wait_for('reaction_add', check=check)
                if str(r) == '‚úÖ':
                    pass
                else:
                    await alert.edit(content=':x: –û—Ç–º–µ–Ω–µ–Ω–æ –≥–æ—Å–ø–æ–¥–∏–Ω–æ–º.')
                    await asyncio.sleep(2)
                    return await alert.delete()

            except asyncio.TimeoutError:
                return await ctx.send(':x: –û—Ç–º–µ–Ω–µ–Ω–æ - –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤—ã—à–ª–æ.')
        
        else:
            alert = await ctx.send('–°–æ—Ä—è–Ω, –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...')
            for x in ['‚úÖ', '‚ùå']:
                await alert.add_reaction(x)
            try:
                def check(r, u):
                    if not alert \
                        or r.message.id != alert.id \
                        or u.bot:
                        return False
                    return True

                r, u = await self.bot.wait_for('reaction_add', check=check)
                if str(r) == '‚úÖ':
                    pass
                else:
                    await alert.edit(content=':x: –û—Ç–º–µ–Ω–µ–Ω–æ –≥–æ—Å–ø–æ–¥–∏–Ω–æ–º.')
                    await asyncio.sleep(2)
                    return await alert.delete()

            except asyncio.TimeoutError:
                return await ctx.send(':x: –û—Ç–º–µ–Ω–µ–Ω–æ - –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –≤—ã—à–ª–æ.')

        await self.bot.change_presence(activity=discord.Game(name='–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...'), status=discord.Status.dnd)
        await ctx.send(embed=discord.Embed(color=0x13CFEB).set_footer(text="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º—Å—è..."))
        os.execl(sys.executable, sys.executable, * sys.argv)

    @commands.command(name='#exception', hidden=True)
    @commands.is_owner()
    async def exception(self, ctx):
        """–í—ã–¥–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
        """

        raise RuntimeError('–í—ã–∑–≤–∞–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.')

    @commands.command(name='load', hidden=True)
    @commands.is_owner()
    async def cog_load(self, ctx, *, cog: str):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:cog` - –∏–º—è –º–æ–¥—É–ª—è (–≤–∫–ª—é—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!load cogs.member.utils
        ```
        """

        try:
            self.bot.load_extension(cog)
        except Exception as e:
            await ctx.send(f'**`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è {cog}:`** \n{type(e).__name__} - {e}')
        else:
            await ctx.send(f'**`–ú–æ–¥—É–ª—å {cog} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω`**')

    @commands.command(name='unload', hidden=True)
    @commands.is_owner()
    async def cog_unload(self, ctx, *, cog: str):
        """–í—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:cog` - –∏–º—è –º–æ–¥—É–ª—è (–≤–∫–ª—é—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!unload cogs.admin
        ```
        """

        try:
            self.bot.unload_extension(cog)
        except Exception as e:
            await ctx.send(f'**`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è {cog}:`** \n{type(e).__name__} - {e}')
        else:
            await ctx.send(f'**`–ú–æ–¥—É–ª—å {cog} —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω`**')

    @commands.command(name='reload', hidden=True)
    @commands.is_owner()
    async def cog_reload(self, ctx, *, cog: str):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:cogs` - –∏–º—è –º–æ–¥—É–ª—è (–≤–∫–ª—é—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!reload cogs.member.fun
        ```
        """

        try:
            self.bot.unload_extension(cog)
            self.bot.load_extension(cog)
        except Exception as e:
            await ctx.send(f'**`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è {cog}:`** \n{type(e).__name__} - {e}')
        else:
            await ctx.send(f'**`–ú–æ–¥—É–ª—å {cog} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω`**')

    async def on_member_join(self, member):
        if member.guild.id == 457092470472179712:
            role = discord.utils.get(member.guild.roles, id=507249626789707777)
            channel = discord.utils.get(member.guild.channels, id=457588184302485514)

            await member.add_roles(role, reason='–ü—Ä–æ—Å—Ç–æ —Ç–∞–∫ :–∑')
            await channel.send(f'<:naomi_arrow_up:506078581227651098> –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è.\n‚óΩ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ {member.guild.name}!**')

    @commands.command(name='execute', aliases=['exec', 'eval', 'run'], hidden=True)
    @commands.is_owner()
    async def execute(self, ctx, *, code: str):
        """–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python –∫–æ–¥–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:code` - –∫–æ–¥ (Python 3)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!exec print('Hello World')
        ```
        """

        async def v_execution():
            async with ctx.channel.typing():
                env = {
                    'channel': ctx.channel,
                    'author': ctx.author,
                    'guild': ctx.guild,
                    'message': ctx.message,
                    'client': self.bot,
                    'bot': self.bot,
                    'discord': discord,
                    'ctx': ctx
                }

                env.update(globals())
                _code = ''.join(code).replace('```python', '').replace('```', '')

                try:
                    stdout = io.StringIO()
                    interpretate = f'async def virtexec():\n{textwrap.indent(_code, "  ")}'
                    exec(interpretate, env)
                    virtexec = env['virtexec']
                    with redirect_stdout(stdout):
                        function = await virtexec()

                except:
                    stdout = io.StringIO()
                    value = stdout.getvalue()

                    msg = discord.Embed(color=0xff0000, description=f"\n:inbox_tray: –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{''.join(code).replace('```python', '').replace('```', '')}\n```\n:outbox_tray: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{value}{traceback.format_exc()}```".replace(self.bot.http.token, '—Ç–∏–ø.—Ç–æ–∫–µ–Ω.–æ–∫–¥–∞'))
                    msg.set_author(name='–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python –∫–æ–¥–∞.')
                    msg.set_footer(text=f'–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å - Python {platform.python_version()} | {platform.system()}')
                    return await ctx.send(f'{self.bot.owner.mention}, —Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞!', embed=msg)
                else:
                    value = stdout.getvalue()
                    if function is None:
                        if not value:
                            value = 'None'
                        success_msg = discord.Embed(color=0x00ff00, description=f":inbox_tray: –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{''.join(code).replace('```python', '').replace('```', '')}```\n\n:outbox_tray: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{value}```".replace(self.bot.http.token, '—Ç–∏–ø.—Ç–æ–∫–µ–Ω.–æ–∫–¥–∞'))
                        success_msg.set_author(name='–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python –∫–æ–¥–∞.')
                        success_msg.set_footer(text=f'–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - Python {platform.python_version()} | {platform.system()}')
                        return await ctx.send(f'{self.bot.owner.mention}, —Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞!', embed=success_msg)
                    else:
                        success_msg = discord.Embed(color=0x00ff00, description=f":inbox_tray: –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{''.join(code).replace('```python', '').replace('```', '')}```\n\n:outbox_tray: –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n```python\n{value}{function}```".replace(self.bot.http.token, '—Ç–∏–ø.—Ç–æ–∫–µ–Ω.–æ–∫–¥–∞'))
                        success_msg.set_author(name='–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python –∫–æ–¥–∞.')
                        success_msg.set_footer(text=f'–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - Python {platform.python_version()} | {platform.system()}')
                        return await ctx.send(f'{self.bot.owner.mention}, —Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞!', embed=success_msg)

        self.bot.loop.create_task(v_execution())

        try:
            await ctx.message.delete()
        except discord.errors.Forbidden:
            pass

def setup(bot):
    bot.add_cog(Owner(bot))
